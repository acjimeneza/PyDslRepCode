/*
 * generated by Xtext 2.18.0.M3
 */
grammar InternalPyDslRep;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package edu.ulibertadores.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.ulibertadores.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.ulibertadores.services.PyDslRepGrammarAccess;

}
@parser::members {
	private PyDslRepGrammarAccess grammarAccess;

	public void setGrammarAccess(PyDslRepGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getEnvironmentAssignment()); }
		(rule__Model__EnvironmentAssignment)*
		{ after(grammarAccess.getModelAccess().getEnvironmentAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getAlternatives()); }
		(rule__Entity__Alternatives)
		{ after(grammarAccess.getEntityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvironment
entryRuleEnvironment
:
{ before(grammarAccess.getEnvironmentRule()); }
	 ruleEnvironment
{ after(grammarAccess.getEnvironmentRule()); } 
	 EOF 
;

// Rule Environment
ruleEnvironment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvironmentAccess().getGroup()); }
		(rule__Environment__Group__0)
		{ after(grammarAccess.getEnvironmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRobot
entryRuleRobot
:
{ before(grammarAccess.getRobotRule()); }
	 ruleRobot
{ after(grammarAccess.getRobotRule()); } 
	 EOF 
;

// Rule Robot
ruleRobot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRobotAccess().getGroup()); }
		(rule__Robot__Group__0)
		{ after(grammarAccess.getRobotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIP
entryRuleIP
:
{ before(grammarAccess.getIPRule()); }
	 ruleIP
{ after(grammarAccess.getIPRule()); } 
	 EOF 
;

// Rule IP
ruleIP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIPAccess().getGroup()); }
		(rule__IP__Group__0)
		{ after(grammarAccess.getIPAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIPA
entryRuleIPA
:
{ before(grammarAccess.getIPARule()); }
	 ruleIPA
{ after(grammarAccess.getIPARule()); } 
	 EOF 
;

// Rule IPA
ruleIPA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIPAAccess().getGroup()); }
		(rule__IPA__Group__0)
		{ after(grammarAccess.getIPAAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWheel
entryRuleWheel
:
{ before(grammarAccess.getWheelRule()); }
	 ruleWheel
{ after(grammarAccess.getWheelRule()); } 
	 EOF 
;

// Rule Wheel
ruleWheel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWheelAccess().getGroup()); }
		(rule__Wheel__Group__0)
		{ after(grammarAccess.getWheelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMoveCollection
entryRuleMoveCollection
:
{ before(grammarAccess.getMoveCollectionRule()); }
	 ruleMoveCollection
{ after(grammarAccess.getMoveCollectionRule()); } 
	 EOF 
;

// Rule MoveCollection
ruleMoveCollection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoveCollectionAccess().getGroup()); }
		(rule__MoveCollection__Group__0)
		{ after(grammarAccess.getMoveCollectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractDataMove
entryRuleAbstractDataMove
:
{ before(grammarAccess.getAbstractDataMoveRule()); }
	 ruleAbstractDataMove
{ after(grammarAccess.getAbstractDataMoveRule()); } 
	 EOF 
;

// Rule AbstractDataMove
ruleAbstractDataMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractDataMoveAccess().getAlternatives()); }
		(rule__AbstractDataMove__Alternatives)
		{ after(grammarAccess.getAbstractDataMoveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractMove
entryRuleAbstractMove
:
{ before(grammarAccess.getAbstractMoveRule()); }
	 ruleAbstractMove
{ after(grammarAccess.getAbstractMoveRule()); } 
	 EOF 
;

// Rule AbstractMove
ruleAbstractMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractMoveAccess().getTypeMAssignment()); }
		(rule__AbstractMove__TypeMAssignment)
		{ after(grammarAccess.getAbstractMoveAccess().getTypeMAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractCrossMove
entryRuleAbstractCrossMove
:
{ before(grammarAccess.getAbstractCrossMoveRule()); }
	 ruleAbstractCrossMove
{ after(grammarAccess.getAbstractCrossMoveRule()); } 
	 EOF 
;

// Rule AbstractCrossMove
ruleAbstractCrossMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractCrossMoveAccess().getTypeMAssignment()); }
		(rule__AbstractCrossMove__TypeMAssignment)
		{ after(grammarAccess.getAbstractCrossMoveAccess().getTypeMAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataMove
entryRuleDataMove
:
{ before(grammarAccess.getDataMoveRule()); }
	 ruleDataMove
{ after(grammarAccess.getDataMoveRule()); } 
	 EOF 
;

// Rule DataMove
ruleDataMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataMoveAccess().getAlternatives()); }
		(rule__DataMove__Alternatives)
		{ after(grammarAccess.getDataMoveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMove
entryRuleMove
:
{ before(grammarAccess.getMoveRule()); }
	 ruleMove
{ after(grammarAccess.getMoveRule()); } 
	 EOF 
;

// Rule Move
ruleMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoveAccess().getGroup()); }
		(rule__Move__Group__0)
		{ after(grammarAccess.getMoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParallel
entryRuleParallel
:
{ before(grammarAccess.getParallelRule()); }
	 ruleParallel
{ after(grammarAccess.getParallelRule()); } 
	 EOF 
;

// Rule Parallel
ruleParallel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParallelAccess().getParallelKeyword()); }
		'parallel'
		{ after(grammarAccess.getParallelAccess().getParallelKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDistance
entryRuleDistance
:
{ before(grammarAccess.getDistanceRule()); }
	 ruleDistance
{ after(grammarAccess.getDistanceRule()); } 
	 EOF 
;

// Rule Distance
ruleDistance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDistanceAccess().getAlternatives()); }
		(rule__Distance__Alternatives)
		{ after(grammarAccess.getDistanceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTurn
entryRuleTurn
:
{ before(grammarAccess.getTurnRule()); }
	 ruleTurn
{ after(grammarAccess.getTurnRule()); } 
	 EOF 
;

// Rule Turn
ruleTurn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTurnAccess().getGroup()); }
		(rule__Turn__Group__0)
		{ after(grammarAccess.getTurnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrientation
entryRuleOrientation
:
{ before(grammarAccess.getOrientationRule()); }
	 ruleOrientation
{ after(grammarAccess.getOrientationRule()); } 
	 EOF 
;

// Rule Orientation
ruleOrientation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrientationAccess().getAlternatives()); }
		(rule__Orientation__Alternatives)
		{ after(grammarAccess.getOrientationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFLOAT
entryRuleFLOAT
:
{ before(grammarAccess.getFLOATRule()); }
	 ruleFLOAT
{ after(grammarAccess.getFLOATRule()); } 
	 EOF 
;

// Rule FLOAT
ruleFLOAT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFLOATAccess().getGroup()); }
		(rule__FLOAT__Group__0)
		{ after(grammarAccess.getFLOATAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensor
entryRuleSensor
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorAccess().getGroup()); }
		(rule__Sensor__Group__0)
		{ after(grammarAccess.getSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSensor
entryRuleTypeSensor
:
{ before(grammarAccess.getTypeSensorRule()); }
	 ruleTypeSensor
{ after(grammarAccess.getTypeSensorRule()); } 
	 EOF 
;

// Rule TypeSensor
ruleTypeSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSensorAccess().getTypeNameAssignment()); }
		(rule__TypeSensor__TypeNameAssignment)
		{ after(grammarAccess.getTypeSensorAccess().getTypeNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getEnvironmentParserRuleCall_0()); }
		ruleEnvironment
		{ after(grammarAccess.getEntityAccess().getEnvironmentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntityAccess().getRobotParserRuleCall_1()); }
		ruleRobot
		{ after(grammarAccess.getEntityAccess().getRobotParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getEntityAccess().getIPParserRuleCall_2()); }
		ruleIP
		{ after(grammarAccess.getEntityAccess().getIPParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getEntityAccess().getSensorParserRuleCall_3()); }
		ruleSensor
		{ after(grammarAccess.getEntityAccess().getSensorParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getEntityAccess().getTypeSensorParserRuleCall_4()); }
		ruleTypeSensor
		{ after(grammarAccess.getEntityAccess().getTypeSensorParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getEntityAccess().getWheelParserRuleCall_5()); }
		ruleWheel
		{ after(grammarAccess.getEntityAccess().getWheelParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getEntityAccess().getDataMoveParserRuleCall_6()); }
		ruleDataMove
		{ after(grammarAccess.getEntityAccess().getDataMoveParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getEntityAccess().getMoveCollectionParserRuleCall_7()); }
		ruleMoveCollection
		{ after(grammarAccess.getEntityAccess().getMoveCollectionParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractDataMove__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractDataMoveAccess().getAbstractCrossMoveParserRuleCall_0()); }
		ruleAbstractCrossMove
		{ after(grammarAccess.getAbstractDataMoveAccess().getAbstractCrossMoveParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractDataMoveAccess().getAbstractMoveParserRuleCall_1()); }
		ruleAbstractMove
		{ after(grammarAccess.getAbstractDataMoveAccess().getAbstractMoveParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataMove__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataMoveAccess().getTurnParserRuleCall_0()); }
		ruleTurn
		{ after(grammarAccess.getDataMoveAccess().getTurnParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataMoveAccess().getMoveParserRuleCall_1()); }
		ruleMove
		{ after(grammarAccess.getDataMoveAccess().getMoveParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Distance__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDistanceAccess().getMetersKeyword_0()); }
		'meters'
		{ after(grammarAccess.getDistanceAccess().getMetersKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getDistanceAccess().getCentimetersKeyword_1()); }
		'centimeters'
		{ after(grammarAccess.getDistanceAccess().getCentimetersKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Orientation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrientationAccess().getLeftKeyword_0()); }
		'left'
		{ after(grammarAccess.getOrientationAccess().getLeftKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrientationAccess().getRightKeyword_1()); }
		'right'
		{ after(grammarAccess.getOrientationAccess().getRightKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSensor__TypeNameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSensorAccess().getTypeNameBumperKeyword_0_0()); }
		'bumper'
		{ after(grammarAccess.getTypeSensorAccess().getTypeNameBumperKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSensorAccess().getTypeNameDistanceKeyword_0_1()); }
		'distance'
		{ after(grammarAccess.getTypeSensorAccess().getTypeNameDistanceKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__0__Impl
	rule__Environment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getEnvironmentKeyword_0()); }
	'environment'
	{ after(grammarAccess.getEnvironmentAccess().getEnvironmentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__1__Impl
	rule__Environment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getNameAssignment_1()); }
	(rule__Environment__NameAssignment_1)
	{ after(grammarAccess.getEnvironmentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__2__Impl
	rule__Environment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getGroup_2()); }
	(rule__Environment__Group_2__0)?
	{ after(grammarAccess.getEnvironmentAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__3__Impl
	rule__Environment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getHasKeyword_3()); }
	'has'
	{ after(grammarAccess.getEnvironmentAccess().getHasKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__4__Impl
	rule__Environment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getEnvironmentAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__5__Impl
	rule__Environment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getRobotsAssignment_5()); }
	(rule__Environment__RobotsAssignment_5)*
	{ after(grammarAccess.getEnvironmentAccess().getRobotsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__6__Impl
	rule__Environment__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__7__Impl
	rule__Environment__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getRobotsKeyword_7()); }
	'robots'
	{ after(grammarAccess.getEnvironmentAccess().getRobotsKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getGroup_8()); }
	(rule__Environment__Group_8__0)?
	{ after(grammarAccess.getEnvironmentAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_2__0__Impl
	rule__Environment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getWithKeyword_2_0()); }
	'with'
	{ after(grammarAccess.getEnvironmentAccess().getWithKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_2__1__Impl
	rule__Environment__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getIpKeyword_2_1()); }
	'ip'
	{ after(grammarAccess.getEnvironmentAccess().getIpKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getIpAssignment_2_2()); }
	(rule__Environment__IpAssignment_2_2)
	{ after(grammarAccess.getEnvironmentAccess().getIpAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_8__0__Impl
	rule__Environment__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getWithKeyword_8_0()); }
	'with'
	{ after(grammarAccess.getEnvironmentAccess().getWithKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_8__1__Impl
	rule__Environment__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getLeftCurlyBracketKeyword_8_1()); }
	'{'
	{ after(grammarAccess.getEnvironmentAccess().getLeftCurlyBracketKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_8__2__Impl
	rule__Environment__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getMovesAssignment_8_2()); }
	(rule__Environment__MovesAssignment_8_2)*
	{ after(grammarAccess.getEnvironmentAccess().getMovesAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_8__3__Impl
	rule__Environment__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_8_3()); }
	'}'
	{ after(grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_8__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_8__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_8__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getMovesKeyword_8_4()); }
	'moves'
	{ after(grammarAccess.getEnvironmentAccess().getMovesKeyword_8_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__0__Impl
	rule__Robot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRobotKeyword_0()); }
	'robot'
	{ after(grammarAccess.getRobotAccess().getRobotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__1__Impl
	rule__Robot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getNameAssignment_1()); }
	(rule__Robot__NameAssignment_1)
	{ after(grammarAccess.getRobotAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__2__Impl
	rule__Robot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getWithKeyword_2()); }
	'with'
	{ after(grammarAccess.getRobotAccess().getWithKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__3__Impl
	rule__Robot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getPortKeyword_3()); }
	'port'
	{ after(grammarAccess.getRobotAccess().getPortKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__4__Impl
	rule__Robot__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getPortAssignment_4()); }
	(rule__Robot__PortAssignment_4)
	{ after(grammarAccess.getRobotAccess().getPortAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__5__Impl
	rule__Robot__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getHasKeyword_5()); }
	'has'
	{ after(grammarAccess.getRobotAccess().getHasKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__6__Impl
	rule__Robot__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__7__Impl
	rule__Robot__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRobotAccess().getWheelsAssignment_7()); }
		(rule__Robot__WheelsAssignment_7)
		{ after(grammarAccess.getRobotAccess().getWheelsAssignment_7()); }
	)
	(
		{ before(grammarAccess.getRobotAccess().getWheelsAssignment_7()); }
		(rule__Robot__WheelsAssignment_7)*
		{ after(grammarAccess.getRobotAccess().getWheelsAssignment_7()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__8__Impl
	rule__Robot__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Robot__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRobotAccess().getWheelsKeyword_9()); }
	'wheels'
	{ after(grammarAccess.getRobotAccess().getWheelsKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IP__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IP__Group__0__Impl
	rule__IP__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IP__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAccess().getIpKeyword_0()); }
	'ip'
	{ after(grammarAccess.getIPAccess().getIpKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IP__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IP__Group__1__Impl
	rule__IP__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IP__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAccess().getNameAssignment_1()); }
	(rule__IP__NameAssignment_1)
	{ after(grammarAccess.getIPAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IP__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IP__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IP__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAccess().getIpAssignment_2()); }
	(rule__IP__IpAssignment_2)
	{ after(grammarAccess.getIPAccess().getIpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IPA__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPA__Group__0__Impl
	rule__IPA__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IPA__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getIPAAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPA__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPA__Group__1__Impl
	rule__IPA__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IPA__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getIPAAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPA__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPA__Group__2__Impl
	rule__IPA__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IPA__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getIPAAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPA__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPA__Group__3__Impl
	rule__IPA__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IPA__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getIPAAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPA__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPA__Group__4__Impl
	rule__IPA__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IPA__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAAccess().getINTTerminalRuleCall_4()); }
	RULE_INT
	{ after(grammarAccess.getIPAAccess().getINTTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPA__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPA__Group__5__Impl
	rule__IPA__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IPA__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAAccess().getFullStopKeyword_5()); }
	'.'
	{ after(grammarAccess.getIPAAccess().getFullStopKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IPA__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IPA__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IPA__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIPAAccess().getINTTerminalRuleCall_6()); }
	RULE_INT
	{ after(grammarAccess.getIPAAccess().getINTTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Wheel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wheel__Group__0__Impl
	rule__Wheel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Wheel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWheelAccess().getWheelKeyword_0()); }
	'wheel'
	{ after(grammarAccess.getWheelAccess().getWheelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wheel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wheel__Group__1__Impl
	rule__Wheel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Wheel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWheelAccess().getNameAssignment_1()); }
	(rule__Wheel__NameAssignment_1)
	{ after(grammarAccess.getWheelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wheel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wheel__Group__2__Impl
	rule__Wheel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Wheel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWheelAccess().getWithKeyword_2()); }
	'with'
	{ after(grammarAccess.getWheelAccess().getWithKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wheel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wheel__Group__3__Impl
	rule__Wheel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Wheel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWheelAccess().getRadiusKeyword_3()); }
	'radius'
	{ after(grammarAccess.getWheelAccess().getRadiusKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wheel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wheel__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Wheel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWheelAccess().getRadiusAssignment_4()); }
	(rule__Wheel__RadiusAssignment_4)
	{ after(grammarAccess.getWheelAccess().getRadiusAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MoveCollection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveCollection__Group__0__Impl
	rule__MoveCollection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveCollectionAccess().getConcurrentAssignment_0()); }
	(rule__MoveCollection__ConcurrentAssignment_0)?
	{ after(grammarAccess.getMoveCollectionAccess().getConcurrentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveCollection__Group__1__Impl
	rule__MoveCollection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveCollectionAccess().getMovementKeyword_1()); }
	'movement'
	{ after(grammarAccess.getMoveCollectionAccess().getMovementKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveCollection__Group__2__Impl
	rule__MoveCollection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveCollectionAccess().getNameAssignment_2()); }
	(rule__MoveCollection__NameAssignment_2)
	{ after(grammarAccess.getMoveCollectionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveCollection__Group__3__Impl
	rule__MoveCollection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveCollectionAccess().getOfKeyword_3()); }
	'of'
	{ after(grammarAccess.getMoveCollectionAccess().getOfKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveCollection__Group__4__Impl
	rule__MoveCollection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveCollectionAccess().getRobotAssignment_4()); }
	(rule__MoveCollection__RobotAssignment_4)
	{ after(grammarAccess.getMoveCollectionAccess().getRobotAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveCollection__Group__5__Impl
	rule__MoveCollection__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveCollectionAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getMoveCollectionAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveCollection__Group__6__Impl
	rule__MoveCollection__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveCollectionAccess().getMovesAssignment_6()); }
	(rule__MoveCollection__MovesAssignment_6)*
	{ after(grammarAccess.getMoveCollectionAccess().getMovesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoveCollection__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveCollectionAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getMoveCollectionAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Move__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__0__Impl
	rule__Move__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getMoveKeyword_0()); }
	'move'
	{ after(grammarAccess.getMoveAccess().getMoveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__1__Impl
	rule__Move__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getNameAssignment_1()); }
	(rule__Move__NameAssignment_1)?
	{ after(grammarAccess.getMoveAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__2__Impl
	rule__Move__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getDistanceAssignment_2()); }
	(rule__Move__DistanceAssignment_2)
	{ after(grammarAccess.getMoveAccess().getDistanceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__3__Impl
	rule__Move__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getTypeAssignment_3()); }
	(rule__Move__TypeAssignment_3)
	{ after(grammarAccess.getMoveAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getGroup_4()); }
	(rule__Move__Group_4__0)?
	{ after(grammarAccess.getMoveAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Move__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group_4__0__Impl
	rule__Move__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getAtKeyword_4_0()); }
	'at'
	{ after(grammarAccess.getMoveAccess().getAtKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Move__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoveAccess().getVelocityAssignment_4_1()); }
	(rule__Move__VelocityAssignment_4_1)
	{ after(grammarAccess.getMoveAccess().getVelocityAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Turn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Turn__Group__0__Impl
	rule__Turn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnAccess().getTurnKeyword_0()); }
	'turn'
	{ after(grammarAccess.getTurnAccess().getTurnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Turn__Group__1__Impl
	rule__Turn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnAccess().getNameAssignment_1()); }
	(rule__Turn__NameAssignment_1)?
	{ after(grammarAccess.getTurnAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Turn__Group__2__Impl
	rule__Turn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnAccess().getTypeAssignment_2()); }
	(rule__Turn__TypeAssignment_2)
	{ after(grammarAccess.getTurnAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Turn__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnAccess().getVelocityAssignment_3()); }
	(rule__Turn__VelocityAssignment_3)?
	{ after(grammarAccess.getTurnAccess().getVelocityAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT__Group__0__Impl
	rule__FLOAT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOATAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getFLOATAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT__Group__1__Impl
	rule__FLOAT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT__Group__2__Impl
	rule__FLOAT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOATAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getFLOATAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLOAT__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__0__Impl
	rule__Sensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorKeyword_0()); }
	'sensor'
	{ after(grammarAccess.getSensorAccess().getSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__1__Impl
	rule__Sensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getNameAssignment_1()); }
	(rule__Sensor__NameAssignment_1)
	{ after(grammarAccess.getSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__2__Impl
	rule__Sensor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getSensorAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getTypeAssignment_3()); }
	(rule__Sensor__TypeAssignment_3)
	{ after(grammarAccess.getSensorAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__EnvironmentAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEnvironmentEntityParserRuleCall_0()); }
		ruleEntity
		{ after(grammarAccess.getModelAccess().getEnvironmentEntityParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnvironmentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__IpAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentAccess().getIpIPCrossReference_2_2_0()); }
		(
			{ before(grammarAccess.getEnvironmentAccess().getIpIPIDTerminalRuleCall_2_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEnvironmentAccess().getIpIPIDTerminalRuleCall_2_2_0_1()); }
		)
		{ after(grammarAccess.getEnvironmentAccess().getIpIPCrossReference_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__RobotsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentAccess().getRobotsRobotCrossReference_5_0()); }
		(
			{ before(grammarAccess.getEnvironmentAccess().getRobotsRobotIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEnvironmentAccess().getRobotsRobotIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getEnvironmentAccess().getRobotsRobotCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__MovesAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentAccess().getMovesMoveCollectionCrossReference_8_2_0()); }
		(
			{ before(grammarAccess.getEnvironmentAccess().getMovesMoveCollectionIDTerminalRuleCall_8_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEnvironmentAccess().getMovesMoveCollectionIDTerminalRuleCall_8_2_0_1()); }
		)
		{ after(grammarAccess.getEnvironmentAccess().getMovesMoveCollectionCrossReference_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRobotAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__PortAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getPortINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getRobotAccess().getPortINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__WheelsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRobotAccess().getWheelsWheelCrossReference_7_0()); }
		(
			{ before(grammarAccess.getRobotAccess().getWheelsWheelIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRobotAccess().getWheelsWheelIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getRobotAccess().getWheelsWheelCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IP__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIPAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getIPAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IP__IpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIPAccess().getIpIPAParserRuleCall_2_0()); }
		ruleIPA
		{ after(grammarAccess.getIPAccess().getIpIPAParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wheel__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWheelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getWheelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wheel__RadiusAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWheelAccess().getRadiusFLOATParserRuleCall_4_0()); }
		ruleFLOAT
		{ after(grammarAccess.getWheelAccess().getRadiusFLOATParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__ConcurrentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveCollectionAccess().getConcurrentParallelParserRuleCall_0_0()); }
		ruleParallel
		{ after(grammarAccess.getMoveCollectionAccess().getConcurrentParallelParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveCollectionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getMoveCollectionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__RobotAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveCollectionAccess().getRobotRobotCrossReference_4_0()); }
		(
			{ before(grammarAccess.getMoveCollectionAccess().getRobotRobotIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMoveCollectionAccess().getRobotRobotIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getMoveCollectionAccess().getRobotRobotCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveCollection__MovesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveCollectionAccess().getMovesAbstractDataMoveParserRuleCall_6_0()); }
		ruleAbstractDataMove
		{ after(grammarAccess.getMoveCollectionAccess().getMovesAbstractDataMoveParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMove__TypeMAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractMoveAccess().getTypeMDataMoveParserRuleCall_0()); }
		ruleDataMove
		{ after(grammarAccess.getAbstractMoveAccess().getTypeMDataMoveParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractCrossMove__TypeMAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractCrossMoveAccess().getTypeMDataMoveCrossReference_0()); }
		(
			{ before(grammarAccess.getAbstractCrossMoveAccess().getTypeMDataMoveIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAbstractCrossMoveAccess().getTypeMDataMoveIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getAbstractCrossMoveAccess().getTypeMDataMoveCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMoveAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__DistanceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getDistanceFLOATParserRuleCall_2_0()); }
		ruleFLOAT
		{ after(grammarAccess.getMoveAccess().getDistanceFLOATParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getTypeDistanceParserRuleCall_3_0()); }
		ruleDistance
		{ after(grammarAccess.getMoveAccess().getTypeDistanceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__VelocityAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getVelocityFLOATParserRuleCall_4_1_0()); }
		ruleFLOAT
		{ after(grammarAccess.getMoveAccess().getVelocityFLOATParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurnAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTurnAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurnAccess().getTypeOrientationParserRuleCall_2_0()); }
		ruleOrientation
		{ after(grammarAccess.getTurnAccess().getTypeOrientationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Turn__VelocityAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurnAccess().getVelocityFLOATParserRuleCall_3_0()); }
		ruleFLOAT
		{ after(grammarAccess.getTurnAccess().getVelocityFLOATParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getTypeTypeSensorParserRuleCall_3_0()); }
		ruleTypeSensor
		{ after(grammarAccess.getSensorAccess().getTypeTypeSensorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSensor__TypeNameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSensorAccess().getTypeNameAlternatives_0()); }
		(rule__TypeSensor__TypeNameAlternatives_0)
		{ after(grammarAccess.getTypeSensorAccess().getTypeNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
