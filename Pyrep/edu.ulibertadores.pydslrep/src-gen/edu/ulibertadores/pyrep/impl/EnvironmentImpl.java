/**
 * generated by Xtext 2.18.0.M3
 */
package edu.ulibertadores.PyDslRep.impl;

import edu.ulibertadores.PyDslRep.Environment;
import edu.ulibertadores.PyDslRep.IP;
import edu.ulibertadores.PyDslRep.MoveCollection;
import edu.ulibertadores.PyDslRep.PyDslRepPackage;
import edu.ulibertadores.PyDslRep.Robot;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Environment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.ulibertadores.PyDslRep.impl.EnvironmentImpl#getName <em>Name</em>}</li>
 *   <li>{@link edu.ulibertadores.PyDslRep.impl.EnvironmentImpl#getIp <em>Ip</em>}</li>
 *   <li>{@link edu.ulibertadores.PyDslRep.impl.EnvironmentImpl#getRobots <em>Robots</em>}</li>
 *   <li>{@link edu.ulibertadores.PyDslRep.impl.EnvironmentImpl#getMoves <em>Moves</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EnvironmentImpl extends EntityImpl implements Environment
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getIp() <em>Ip</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIp()
   * @generated
   * @ordered
   */
  protected IP ip;

  /**
   * The cached value of the '{@link #getRobots() <em>Robots</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRobots()
   * @generated
   * @ordered
   */
  protected EList<Robot> robots;

  /**
   * The cached value of the '{@link #getMoves() <em>Moves</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMoves()
   * @generated
   * @ordered
   */
  protected EList<MoveCollection> moves;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EnvironmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PyDslRepPackage.Literals.ENVIRONMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PyDslRepPackage.ENVIRONMENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IP getIp()
  {
    if (ip != null && ip.eIsProxy())
    {
      InternalEObject oldIp = (InternalEObject)ip;
      ip = (IP)eResolveProxy(oldIp);
      if (ip != oldIp)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PyDslRepPackage.ENVIRONMENT__IP, oldIp, ip));
      }
    }
    return ip;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IP basicGetIp()
  {
    return ip;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIp(IP newIp)
  {
    IP oldIp = ip;
    ip = newIp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PyDslRepPackage.ENVIRONMENT__IP, oldIp, ip));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Robot> getRobots()
  {
    if (robots == null)
    {
      robots = new EObjectResolvingEList<Robot>(Robot.class, this, PyDslRepPackage.ENVIRONMENT__ROBOTS);
    }
    return robots;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<MoveCollection> getMoves()
  {
    if (moves == null)
    {
      moves = new EObjectResolvingEList<MoveCollection>(MoveCollection.class, this, PyDslRepPackage.ENVIRONMENT__MOVES);
    }
    return moves;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PyDslRepPackage.ENVIRONMENT__NAME:
        return getName();
      case PyDslRepPackage.ENVIRONMENT__IP:
        if (resolve) return getIp();
        return basicGetIp();
      case PyDslRepPackage.ENVIRONMENT__ROBOTS:
        return getRobots();
      case PyDslRepPackage.ENVIRONMENT__MOVES:
        return getMoves();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PyDslRepPackage.ENVIRONMENT__NAME:
        setName((String)newValue);
        return;
      case PyDslRepPackage.ENVIRONMENT__IP:
        setIp((IP)newValue);
        return;
      case PyDslRepPackage.ENVIRONMENT__ROBOTS:
        getRobots().clear();
        getRobots().addAll((Collection<? extends Robot>)newValue);
        return;
      case PyDslRepPackage.ENVIRONMENT__MOVES:
        getMoves().clear();
        getMoves().addAll((Collection<? extends MoveCollection>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PyDslRepPackage.ENVIRONMENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PyDslRepPackage.ENVIRONMENT__IP:
        setIp((IP)null);
        return;
      case PyDslRepPackage.ENVIRONMENT__ROBOTS:
        getRobots().clear();
        return;
      case PyDslRepPackage.ENVIRONMENT__MOVES:
        getMoves().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PyDslRepPackage.ENVIRONMENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PyDslRepPackage.ENVIRONMENT__IP:
        return ip != null;
      case PyDslRepPackage.ENVIRONMENT__ROBOTS:
        return robots != null && !robots.isEmpty();
      case PyDslRepPackage.ENVIRONMENT__MOVES:
        return moves != null && !moves.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //EnvironmentImpl
